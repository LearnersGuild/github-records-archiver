#!/usr/bin/env ruby
# Backs up a GitHub organization's repositories and
# all their associated information for archival purposes.
# Usage: ruby archive.rb

require './lib/github_records_archiver'
require 'parallel'

def logger
  @logger ||= Logger.new(STDOUT)
end

def log(msg)
  logger.info(msg)
end

def error(msg)
  logger.error(msg)
end

archiver = GitHubRecordsArchiver
pwd      = Dir.pwd
start    = Time.now
org_name = ARGV[0] || ENV['GITHUB_ORGANIZATION']
dest_dir = ARGV[1] || ENV['GITHUB_ARCHIVE_DIR']
org      = archiver::Organization.new org_name

archiver.dest_dir = dest_dir

log "Starting archive for @#{org.name} in #{org.archive_dir}"

log "Found #{org.teams.count} teams"
Parallel.each(org.teams, progress: 'Archiving teams', &:archive)

log "Found #{org.repos.count} repos"
Parallel.each(org.repos, progress: 'Archiving repos') do |repo|
  begin
    repo.clone
    Parallel.each(repo.issues, &:archive)
    repo.wiki.clone unless repo.wiki.nil?
  rescue GitHubRecordsArchiver::GitError => e
    if e.message =~ /wiki/
      error "No wiki found for #{repo.name}"
    else
      error "Failed to archive #{repo.name}"
      error e.message
    end
  end
end

Dir.chdir pwd
log "Done in #{Time.now - start} seconds."
